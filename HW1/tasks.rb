# 1. Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.	
array = [1,2,3,4,5,6,7,8,9,10]
p (array.partition.with_index { |i| i.even? }).flatten
p '--------------'

# 2. Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.
array = [1,2,3,4,5,6,7,8,9,10]
p (array.partition.with_index { |i| i.odd? }).flatten
p '--------------'

# 3. Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять.	
array = [1,2,3,4,5,6,7,8,9,10]
p array.map { |e| e.even? && (e != array[0] && e != array[-1] ) ? e + array.first : e }
p '--------------'

# 4. Дан целочисленный массив. Преобразовать его, прибавив к четным числам последний элемент. Первый и последний элементы массива не изменять.
array = [1,2,3,4,5,6,7,8,9,10]
p array.map { |e| e.even? && (e != array[0] && e != array[-1] ) ? e + array.last : e }
p '--------------'

# 5. Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам последний элемент. Первый и последний элементы массива не изменять.
array = [1,2,3,4,5,6,7,8,9,10]
p array.map { |e| e.odd? && (e != array[0] && e != array[-1] ) ? e + array.first : e }
p '--------------'

# 6. Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам первый элемент. Первый и последний элементы массива не изменять.
array = [1,2,3,4,5,6,7,8,9,10]
p array.map { |e| e.odd? && (e != array[0] && e != array[-1] ) ? e + array.last : e }
p '--------------'

# 7. Дан целочисленный массив. Заменить все положительные элементы на значение минимального.	
array = [10,2,-33,-55,55,61,-70,8,9,10]
p array.map { |e| e.positive? ? array.min : e}
p '--------------'

# 8. Дан целочисленный массив. Заменить все положительные элементы на значение максимального.
array = [10,2,-33,-55,55,61,-70,8,9,10]
p array.map { |e| e.positive? ? array.max : e}
p '--------------'

# 9. Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального.
array = [10,2,-33,-55,55,61,-70,8,9,10]
p array.map { |e| e.negative? ? array.min : e}
p '--------------'

#10. Дан целочисленный массив. Заменить все отрицательные элементы на значение максимального.
array = [10,2,-33,-55,55,61,-70,8,9,10]
p array.map { |e| e.negative? ? array.max : e}
p '--------------'

# 11. Дан целочисленный массив. Найти индекс минимального элемента.
array = [10,2,-33,-55,55,61,-70,8,9,10]
p array.index(array.min)
p '--------------'

# 12. Дан целочисленный массив. Найти индекс максимального элемента.		
array = [10,2,-33,-55,55,61,-70,8,9,10]
p array.index(array.max)
p '--------------'

# 13. Дан целочисленный массив. Найти количество минимальных элементов
array = [10,2,-33,-70,55,61,-70,8,9,-70]
p array.select{|e| e==array.min}.size
p '--------------'

# 14. Дан целочисленный массив. Найти количество максимальных элементов.
array = [10,2,-33,-70,55,61,-70,8,9,61]
p array.select{|e| e==array.max}.size
p '--------------'

# 15. Дан целочисленный массив. Найти минимальный нечетный элемент
array = [10,2,-33,-77,55,61,-70,8,9,61]
p array.select{|e| e.odd?}.min
p '--------------'

# 16. Дан целочисленный массив. Найти минимальный четный элемент.
array = [10,2,-33,-77,55,61,-70,8,9,61]
p array.select{|e| e.even?}.min
p '--------------'

# 17. Дан целочисленный массив. Найти максимальный четный элемент.
array = [10,2,77,76,55,61,-70,8,9,61]
p array.select{|e| e.even?}.max
p '--------------'

# 18. Дан целочисленный массив. Найти максимальный нечетный элемент.
array = [10,2,77,76,55,61,-70,8,9,61]
p array.select{|e| e.odd?}.max
p '--------------'

# 19. Дан целочисленный массив. Найти минимальный положительный элемент
array = [10,2,77,76,55,61,-70,8,9,61]
p array.select{|e| e > 0}.min
p '--------------'

# 20. Дан целочисленный массив. Найти максимальный отрицательный элемент.
array = [10,2,-77,76,55,61,-70,8,-9,61]
p array.select{|e| e < 0}.max
p '--------------'

# 21. Дан целочисленный массив и интервал a..b. Найти минимальный из элементов в этом интервале.
array = [1,2,7,9,5,6,7,8,9,10]
p array[2..5].min
p '--------------'

# 22. Дан целочисленный массив и интервал a..b. Найти максимальный из элементов в этом интервале.
array = [1,2,7,9,5,6,7,8,9,10]
p array[2..5].max
p '--------------'

# 23. Дан целочисленный массив. Найти два наибольших элемента
array = [10,2,-77,76,55,61,-70,8,-9,61]
p array.max(2)
p '--------------'

# 24. Дан целочисленный массив. Найти два наименьших элемента.
array = [10,2,-77,76,55,61,-70,8,-9,61]
p array.min(2)
p '--------------'

# 25. Дан целочисленный массив. Вывести вначале все его четные элементы, а затем - нечетные.
array = [10,2,-77,76,55,61,-70,8,-9,61]
p array.partition(&:even?).flatten
p '--------------'

# 26. Дан целочисленный массив. Вывести вначале все его нечетные элементы, а затем - четные.
array = [10,2,-77,76,55,61,-70,8,-9,61]
p array.partition(&:odd?).flatten
p '--------------'

# 27. Дан целочисленный массив. Найти все четные элементы.
array = [10,2,-77,76,55,61,-70,8,-9,61]
array.each_with_index {|e,i| puts e if e.even?}
p '--------------'

# 28. Дан целочисленный массив. Найти все нечетные элементы.	
array = [10,2,-77,76,55,61,-70,8,-9,61]
array.each_with_index {|e,i| puts e if e.odd?}
p '--------------'

# 29. Дан целочисленный массив. Найти количество четных элементов.
array = [10,2,-77,76,55,61,-70,8,-90,61]
p array.select { |e| e.even? }.size
p '--------------'

# 30. Дан целочисленный массив. Найти количество нечетных элементов.	
array = [10,2,-77,76,55,61,-70,8,-90,61]
p array.select { |e| e.odd?}.size
p '--------------'

# 31. Дан целочисленный массив. Осуществить циклический сдвиг элементов массива влево на одну позицию.
array = [10,2,-77,76,55,61,-70,8,-90,61]
p array.rotate
p '--------------'

# 32. Дан целочисленный массив. Осуществить циклический сдвиг элементов массива вправо на одну позицию.
array = [10,2,-77,76,55,61,-70,8,-90,61]
p array.rotate(-1)
p '--------------'

# 33. Дан целочисленный массив. Упорядочить его по возрастанию.
array = [10,2,-77,76,55,61,-70,8,-90,61]
p array.sort
p '--------------'

# 34. Дан целочисленный массив. Упорядочить его по убыванию.
array = [10,2,-77,76,55,61,-70,8,-90,61]
p array.sort.reverse
p '--------------'

# 35. Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют убывающую последовательность.
array = [10,2,-77,76,55,61,-70,8,-90,61]
p (0...array.size).sort_by{ |i| array[i] }.reverse
p '--------------'

# 36. Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют возрастающую последовательность.
array = [10,2,-77,76,55,61,-70,8,-90,61]
p (0...array.size).sort_by{ |i| array[i] }
p '--------------'

# 37. Дан целочисленный массив. Найти индекс первого минимального элемента.
array = [10,2,-33,-70,55,61,-70,8,9,-70]
p array.index(array.min)
p '--------------'

# 38. Дан целочисленный массив. Найти индекс первого максимального элемента.
array = [10,61,-33,-70,55,61,-70,8,61,-70]
array = [10,2,-33,-70,55,61,-70,8,9,-70]
p array.index(array.max)
p '--------------'

# 39. Дан целочисленный массив. Найти индекс последнего максимального  элемента.
array = [10,61,-33,-70,55,61,-70,8,61,-70]
p array.rindex(array.max)
p '--------------'

# 40. Дан целочисленный массив. Найти индекс последнего минимального   элемента.
array = [10,61,-33,-70,55,61,-70,8,61,-70]
p array.rindex(array.min)
p '--------------'

#41. Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным.	
array = [6,7,8,9,5,6,7]
x = array.rindex(array.min)
p array[0...x].length
p '--------------'
 
# 42. Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным.	
array = [6,7,8,9,5,6,7]
x = array.rindex(array.max)
p array[0...x].length
p '--------------'
 
# 43. Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального.
array = [6,7,8,9,5,6,7,8]
x = array.rindex(array.max)
p array[x + 1..7].length 
p '--------------'
 
 
# 44. Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального .
array = [4,7,8,3,9,5,6,7,8]
x = array.rindex(array.min)
p array[x + 1..8].length 
p '--------------'

# 45. Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным.
array = [6,7,8,9,5,6,7,8,9,6,2]
x = array.rindex(array.max)
p array[0...x].length 
p '--------------'

 
# 46. Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным.
array = [6,7,2,8,9,5,6,2,8,9,6]
x = array.rindex(array.min)
p array[0...x].length 
p '--------------'

# 47. Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального.	
array = [6,7,8,9,5,6,7,8,9,6,2]
x = array.rindex(array.max)
p array[x+1..10].length
p '--------------'


# 48. Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального .	
array = [6,7,2,8,9,5,6,2,8,9,6]
x = array.rindex(array.min)
p array[x+1..10].length
p '--------------'

# 49. Дан целочисленный массив. Удалить все элементы, встречающиеся ровно три раза.
array = [6,7,2,8,9,5,6,2,8,9,6,2]
filtering = array.uniq.select do |e|
  array.count(e) == 3
end

filtering.each do |e|
  array.delete(e)
end
p array
p '--------------'

# 50. Дан целочисленный массив. Удалить все элементы, встречающиеся ровно два раза.
array = [6,7,2,8,9,5,6,2,8,9,6,2]
filtering = array.uniq.select do |e|
  array.count(e) == 2
end

filtering.each do |e|
  array.delete(e)
end
p array










